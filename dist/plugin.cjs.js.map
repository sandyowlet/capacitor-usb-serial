{"version":3,"file":"plugin.cjs.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst UsbSerial = registerPlugin('UsbSerial', {\n    web: () => import('./web').then(m => new m.UsbSerialWeb()),\n});\nexport * from './definitions';\nexport { UsbSerial };\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class UsbSerialWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.port = null;\n        this.reader = null;\n        this.writer = null;\n        this.listening = false;\n        this.availablePorts = [];\n        this.connected = false;\n        this.checkWebSerialSupport();\n        this.setupSerialPortListeners();\n    }\n    checkWebSerialSupport() {\n        if (!('serial' in navigator)) {\n            console.error('Web Serial API not supported in this browser');\n            this.notifyError('Web Serial API not supported. Please use Chrome/Edge 89+ or enable experimental web platform features.');\n        }\n    }\n    async requestPermission(options) {\n        if (!('serial' in navigator)) {\n            throw new Error('Web Serial API not supported');\n        }\n        try {\n            // If deviceId is provided, try to use existing port\n            if ((options === null || options === void 0 ? void 0 : options.deviceId) !== undefined) {\n                const ports = await navigator.serial.getPorts();\n                if (ports[options.deviceId]) {\n                    this.port = ports[options.deviceId];\n                    return { granted: true };\n                }\n            }\n            // Request new port with ESP32 filter\n            const requestOptions = {\n                filters: [\n                    { usbVendorId: 0x10C4 }, // Silicon Labs CP210x\n                    { usbVendorId: 0x1A86 }, // QinHeng Electronics CH340\n                    { usbVendorId: 0x0403 }, // FTDI\n                    { usbVendorId: 0x303A }, // Espressif (ESP32)\n                ]\n            };\n            this.port = await navigator.serial.requestPort(requestOptions);\n            return { granted: true };\n        }\n        catch (e) {\n            const errorMsg = 'Permission denied: ' + e.message;\n            console.error(errorMsg);\n            this.notifyError(errorMsg);\n            return { granted: false };\n        }\n    }\n    async listDevices() {\n        if (!('serial' in navigator)) {\n            throw new Error('Web Serial API not supported');\n        }\n        try {\n            const ports = await navigator.serial.getPorts();\n            this.availablePorts = ports;\n            const devices = await Promise.all(ports.map(async (port, index) => {\n                const info = port.getInfo ? port.getInfo() : {};\n                return {\n                    deviceId: index,\n                    vendorId: info.usbVendorId || 0,\n                    productId: info.usbProductId || 0,\n                    deviceName: this.getDeviceName(info.usbVendorId, info.usbProductId, index),\n                    manufacturerName: info.manufacturerName,\n                    serialNumber: info.serialNumber,\n                };\n            }));\n            console.log('Web Serial devices found:', devices);\n            return { devices };\n        }\n        catch (error) {\n            console.error('Error listing devices:', error);\n            throw error;\n        }\n    }\n    getDeviceName(vendorId, _productId, index) {\n        const vendorMap = {\n            0x10C4: 'Silicon Labs CP210x',\n            0x1A86: 'QinHeng CH340',\n            0x0403: 'FTDI',\n            0x303A: 'Espressif ESP32',\n        };\n        const vendorName = vendorMap[vendorId] || 'Unknown';\n        return `${vendorName} (Port ${index})`;\n    }\n    async connect(options) {\n        var _a, _b, _c, _d;\n        try {\n            // Get the specific port for the deviceId\n            if (!this.port) {\n                const ports = await navigator.serial.getPorts();\n                this.port = ports[options.deviceId];\n            }\n            if (!this.port) {\n                const errorMsg = `No port available for device ID ${options.deviceId}`;\n                this.notifyError(errorMsg);\n                throw new Error(errorMsg);\n            }\n            // Configure serial options\n            const serialOptions = {\n                baudRate: ((_a = options.serialOptions) === null || _a === void 0 ? void 0 : _a.baudRate) || 115200,\n                dataBits: ((_b = options.serialOptions) === null || _b === void 0 ? void 0 : _b.dataBits) || 8,\n                stopBits: ((_c = options.serialOptions) === null || _c === void 0 ? void 0 : _c.stopBits) || 1,\n                parity: ((_d = options.serialOptions) === null || _d === void 0 ? void 0 : _d.parity) || 'none',\n                bufferSize: 32768, // Increase buffer size for high-speed data\n                flowControl: 'none'\n            };\n            console.log('Connecting with options:', serialOptions);\n            await this.port.open(serialOptions);\n            this.connected = true;\n            // Set up readable stream\n            const textDecoder = new TextDecoderStream();\n            const readableStreamClosed = this.port.readable.pipeTo(textDecoder.writable);\n            this.reader = textDecoder.readable.getReader();\n            // Set up writable stream\n            const textEncoder = new TextEncoderStream();\n            const writableStreamClosed = textEncoder.readable.pipeTo(this.port.writable);\n            this.writer = textEncoder.writable.getWriter();\n            // Handle stream closures\n            readableStreamClosed.catch(() => {\n                console.log('Readable stream closed');\n            });\n            writableStreamClosed.catch(() => {\n                console.log('Writable stream closed');\n            });\n            console.log('Connected to serial port successfully');\n            this.notifyListeners('connectionStateChanged', {\n                connected: true,\n                deviceId: options.deviceId\n            });\n            return { connected: true };\n        }\n        catch (error) {\n            this.connected = false;\n            const errorMsg = 'Connection failed: ' + error.message;\n            console.error(errorMsg);\n            this.notifyError(errorMsg);\n            throw new Error(errorMsg);\n        }\n    }\n    async disconnect() {\n        console.log('Disconnecting from serial port...');\n        this.listening = false;\n        this.connected = false;\n        try {\n            if (this.reader) {\n                await this.reader.cancel();\n                this.reader.releaseLock();\n                this.reader = null;\n            }\n            if (this.writer) {\n                await this.writer.close();\n                this.writer = null;\n            }\n            if (this.port) {\n                await this.port.close();\n                this.port = null;\n            }\n            this.notifyListeners('connectionStateChanged', { connected: false });\n            console.log('Disconnected successfully');\n            return { disconnected: true };\n        }\n        catch (error) {\n            console.error('Error during disconnect:', error);\n            // Still notify that we're disconnected\n            this.notifyListeners('connectionStateChanged', { connected: false });\n            return { disconnected: true };\n        }\n    }\n    async write(options) {\n        if (!this.writer || !this.connected) {\n            const errorMsg = 'Cannot write: Not connected to any device';\n            this.notifyError(errorMsg);\n            throw new Error(errorMsg);\n        }\n        try {\n            await this.writer.write(options.data);\n            console.log('Data written to serial port:', options.data);\n            return { bytesWritten: options.data.length };\n        }\n        catch (error) {\n            const errorMsg = 'Write failed: ' + error.message;\n            this.notifyError(errorMsg);\n            throw new Error(errorMsg);\n        }\n    }\n    async read() {\n        if (!this.reader || !this.connected) {\n            const errorMsg = 'Cannot read: Not connected to any device';\n            this.notifyError(errorMsg);\n            throw new Error(errorMsg);\n        }\n        try {\n            const { value, done } = await this.reader.read();\n            if (done) {\n                throw new Error('Stream closed');\n            }\n            return { data: value || '' };\n        }\n        catch (error) {\n            const errorMsg = 'Read failed: ' + error.message;\n            this.notifyError(errorMsg);\n            throw new Error(errorMsg);\n        }\n    }\n    async startListening() {\n        if (!this.connected) {\n            throw new Error('Cannot start listening: Not connected to any device');\n        }\n        console.log('Starting listening for serial data...');\n        this.listening = true;\n        this.listenForData();\n    }\n    async stopListening() {\n        console.log('Stopping listening for serial data...');\n        this.listening = false;\n    }\n    async listenForData() {\n        console.log('Starting data listener for web serial...');\n        let buffer = '';\n        while (this.listening && this.reader && this.connected) {\n            try {\n                const { value, done } = await this.reader.read();\n                if (done) {\n                    console.log('Reader stream ended');\n                    break;\n                }\n                if (!value) {\n                    continue;\n                }\n                // Accumulate data in buffer\n                buffer += value;\n                // Process complete lines\n                const lines = buffer.split('\\n');\n                buffer = lines.pop() || ''; // Keep incomplete line in buffer\n                for (const line of lines) {\n                    if (line.trim()) {\n                        this.processDataLine(line.trim());\n                    }\n                }\n                // Also process the complete buffer as hex if it looks like raw data\n                if (buffer.length > 0 && this.isHexData(buffer.trim())) {\n                    this.processDataLine(buffer.trim());\n                    buffer = '';\n                }\n            }\n            catch (error) {\n                if (this.listening) {\n                    console.error('Read error:', error);\n                    this.notifyError('Read error: ' + error.message);\n                }\n                break;\n            }\n        }\n        console.log('Data listener stopped');\n    }\n    processDataLine(line) {\n        // Convert string to hex representation\n        const hexData = this.stringToHex(line);\n        const event = {\n            data: line,\n            hexData: hexData,\n            timestamp: Date.now(),\n            deviceId: 0\n        };\n        console.log('Web Serial data received:', event);\n        this.notifyListeners('dataReceived', event);\n    }\n    stringToHex(str) {\n        // If the string is already hex format, return it uppercase\n        if (this.isHexData(str)) {\n            return str.toUpperCase();\n        }\n        // Convert string characters to hex\n        return Array.from(str)\n            .map((char) => char.charCodeAt(0).toString(16).padStart(2, '0'))\n            .join('')\n            .toUpperCase();\n    }\n    isHexData(str) {\n        // Check if string contains only hex characters and is reasonable length\n        return /^[0-9A-Fa-f\\s]+$/.test(str.replace(/\\s/g, '')) && str.replace(/\\s/g, '').length >= 4;\n    }\n    setupSerialPortListeners() {\n        if (!('serial' in navigator)) {\n            console.warn('Web Serial API not available, skipping port listeners setup');\n            return;\n        }\n        console.log('Setting up Web Serial port listeners...');\n        navigator.serial.addEventListener('connect', async (event) => {\n            console.log('Serial port connected:', event);\n            try {\n                const port = event.target;\n                const info = port.getInfo ? port.getInfo() : {};\n                const attachedEvent = {\n                    deviceId: this.availablePorts.length, // Assign next available ID\n                    vendorId: info.usbVendorId || 0,\n                    productId: info.usbProductId || 0,\n                    deviceName: this.getDeviceName(info.usbVendorId, info.usbProductId, this.availablePorts.length),\n                    manufacturerName: info.manufacturerName,\n                    serialNumber: info.serialNumber,\n                };\n                this.availablePorts.push(port);\n                this.notifyListeners('deviceAttached', attachedEvent);\n                // Auto-connect to ESP32 devices (ESP32 vendor IDs)\n                const esp32VendorIds = [0x10C4, 0x1A86, 0x0403, 0x303A];\n                if (esp32VendorIds.includes(info.usbVendorId)) {\n                    console.log('ESP32 device detected, triggering auto-connect notification');\n                    // Don't auto-connect here, let the service handle it\n                }\n            }\n            catch (error) {\n                console.error('Error handling device attachment:', error);\n            }\n        });\n        navigator.serial.addEventListener('disconnect', async (event) => {\n            console.log('Serial port disconnected:', event);\n            try {\n                const port = event.target;\n                const portIndex = this.availablePorts.indexOf(port);\n                if (portIndex >= 0) {\n                    const detachedEvent = {\n                        deviceId: portIndex,\n                    };\n                    this.availablePorts.splice(portIndex, 1);\n                    this.notifyListeners('deviceDetached', detachedEvent);\n                    // If this was our connected port, disconnect\n                    if (this.port === port) {\n                        console.log('Connected port was removed, disconnecting...');\n                        await this.disconnect();\n                    }\n                }\n            }\n            catch (error) {\n                console.error('Error handling device detachment:', error);\n            }\n        });\n    }\n    notifyError(message) {\n        const errorEvent = { message };\n        this.notifyListeners('error', errorEvent);\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":"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"}